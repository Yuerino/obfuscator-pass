; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -load-pass-plugin %shlibdir/libMBASub%shlibext -passes="mba-sub" -S %s | FileCheck %s

define dso_local i32 @main(i32 noundef %0, ptr noundef %1) #0 {
; CHECK-LABEL: @main(
; CHECK-NEXT:    [[TMP3:%.*]] = alloca i32, align 4
; CHECK-NEXT:    [[TMP4:%.*]] = alloca i32, align 4
; CHECK-NEXT:    [[TMP5:%.*]] = alloca ptr, align 8
; CHECK-NEXT:    [[TMP6:%.*]] = alloca i32, align 4
; CHECK-NEXT:    [[TMP7:%.*]] = alloca i32, align 4
; CHECK-NEXT:    [[TMP8:%.*]] = alloca i32, align 4
; CHECK-NEXT:    [[TMP9:%.*]] = alloca i32, align 4
; CHECK-NEXT:    [[TMP10:%.*]] = alloca i32, align 4
; CHECK-NEXT:    [[TMP11:%.*]] = alloca i32, align 4
; CHECK-NEXT:    store i32 0, ptr [[TMP3]], align 4
; CHECK-NEXT:    store i32 [[TMP0:%.*]], ptr [[TMP4]], align 4
; CHECK-NEXT:    store ptr [[TMP1:%.*]], ptr [[TMP5]], align 8
; CHECK-NEXT:    [[TMP12:%.*]] = load ptr, ptr [[TMP5]], align 8
; CHECK-NEXT:    [[TMP13:%.*]] = getelementptr inbounds ptr, ptr [[TMP12]], i64 1
; CHECK-NEXT:    [[TMP14:%.*]] = load ptr, ptr [[TMP13]], align 8
; CHECK-NEXT:    [[TMP15:%.*]] = call i32 @atoi(ptr noundef [[TMP14]])
; CHECK-NEXT:    store i32 [[TMP15]], ptr [[TMP6]], align 4
; CHECK-NEXT:    [[TMP16:%.*]] = load ptr, ptr [[TMP5]], align 8
; CHECK-NEXT:    [[TMP17:%.*]] = getelementptr inbounds ptr, ptr [[TMP16]], i64 2
; CHECK-NEXT:    [[TMP18:%.*]] = load ptr, ptr [[TMP17]], align 8
; CHECK-NEXT:    [[TMP19:%.*]] = call i32 @atoi(ptr noundef [[TMP18]])
; CHECK-NEXT:    store i32 [[TMP19]], ptr [[TMP7]], align 4
; CHECK-NEXT:    [[TMP20:%.*]] = load ptr, ptr [[TMP5]], align 8
; CHECK-NEXT:    [[TMP21:%.*]] = getelementptr inbounds ptr, ptr [[TMP20]], i64 3
; CHECK-NEXT:    [[TMP22:%.*]] = load ptr, ptr [[TMP21]], align 8
; CHECK-NEXT:    [[TMP23:%.*]] = call i32 @atoi(ptr noundef [[TMP22]])
; CHECK-NEXT:    store i32 [[TMP23]], ptr [[TMP8]], align 4
; CHECK-NEXT:    [[TMP24:%.*]] = load ptr, ptr [[TMP5]], align 8
; CHECK-NEXT:    [[TMP25:%.*]] = getelementptr inbounds ptr, ptr [[TMP24]], i64 4
; CHECK-NEXT:    [[TMP26:%.*]] = load ptr, ptr [[TMP25]], align 8
; CHECK-NEXT:    [[TMP27:%.*]] = call i32 @atoi(ptr noundef [[TMP26]])
; CHECK-NEXT:    store i32 [[TMP27]], ptr [[TMP9]], align 4
; CHECK-NEXT:    [[TMP28:%.*]] = load i32, ptr [[TMP6]], align 4
; CHECK-NEXT:    [[TMP29:%.*]] = load i32, ptr [[TMP7]], align 4
; CHECK-NEXT:    [[TMP30:%.*]] = xor i32 [[TMP29]], -1
; CHECK-NEXT:    [[TMP31:%.*]] = add i32 [[TMP28]], [[TMP30]]
; CHECK-NEXT:    [[TMP32:%.*]] = add i32 [[TMP31]], 1
; CHECK-NEXT:    store i32 [[TMP32]], ptr [[TMP10]], align 4
; CHECK-NEXT:    [[TMP33:%.*]] = load i32, ptr [[TMP8]], align 4
; CHECK-NEXT:    [[TMP34:%.*]] = load i32, ptr [[TMP9]], align 4
; CHECK-NEXT:    [[TMP35:%.*]] = xor i32 [[TMP34]], -1
; CHECK-NEXT:    [[TMP36:%.*]] = add i32 [[TMP33]], [[TMP35]]
; CHECK-NEXT:    [[TMP37:%.*]] = add i32 [[TMP36]], 1
; CHECK-NEXT:    store i32 [[TMP37]], ptr [[TMP11]], align 4
; CHECK-NEXT:    [[TMP38:%.*]] = load i32, ptr [[TMP10]], align 4
; CHECK-NEXT:    [[TMP39:%.*]] = load i32, ptr [[TMP11]], align 4
; CHECK-NEXT:    [[TMP40:%.*]] = xor i32 [[TMP39]], -1
; CHECK-NEXT:    [[TMP41:%.*]] = add i32 [[TMP38]], [[TMP40]]
; CHECK-NEXT:    [[TMP42:%.*]] = add i32 [[TMP41]], 1
; CHECK-NEXT:    ret i32 [[TMP42]]
;
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 0, ptr %3, align 4
  store i32 %0, ptr %4, align 4
  store ptr %1, ptr %5, align 8
  %12 = load ptr, ptr %5, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 1
  %14 = load ptr, ptr %13, align 8
  %15 = call i32 @atoi(ptr noundef %14) #2
  store i32 %15, ptr %6, align 4
  %16 = load ptr, ptr %5, align 8
  %17 = getelementptr inbounds ptr, ptr %16, i64 2
  %18 = load ptr, ptr %17, align 8
  %19 = call i32 @atoi(ptr noundef %18) #2
  store i32 %19, ptr %7, align 4
  %20 = load ptr, ptr %5, align 8
  %21 = getelementptr inbounds ptr, ptr %20, i64 3
  %22 = load ptr, ptr %21, align 8
  %23 = call i32 @atoi(ptr noundef %22) #2
  store i32 %23, ptr %8, align 4
  %24 = load ptr, ptr %5, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 4
  %26 = load ptr, ptr %25, align 8
  %27 = call i32 @atoi(ptr noundef %26) #2
  store i32 %27, ptr %9, align 4
  %28 = load i32, ptr %6, align 4
  %29 = load i32, ptr %7, align 4
  %30 = sub nsw i32 %28, %29
  store i32 %30, ptr %10, align 4
  %31 = load i32, ptr %8, align 4
  %32 = load i32, ptr %9, align 4
  %33 = sub nsw i32 %31, %32
  store i32 %33, ptr %11, align 4
  %34 = load i32, ptr %10, align 4
  %35 = load i32, ptr %11, align 4
  %36 = sub nsw i32 %34, %35
  ret i32 %36
}

declare i32 @atoi(ptr noundef) #1
